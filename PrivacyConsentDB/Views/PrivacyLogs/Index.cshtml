@using PrivacyConsentDB.Models;
@model PrivacyConsentDB.Dto.PrivacyLogIndexDto
@{ 
    PrivacyLogSearch mdlSearch = Model.Search;
    IEnumerable<PrivacyLog> mdllogs = Model.Logs;
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>고객정보 변경이력</h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div class="clearfix"></div>
                @using (Html.BeginForm())
                {

                    @Html.Hidden("startIndex", Model.startIndex)
                    @Html.Hidden("pageSize", Model.pageSize)
                    @Html.Hidden("totalCount", Model.totalCount)
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="input-group-xs">
                                @Html.LabelFor(model => model.modifier, htmlAttributes: new { @class = "control-label col-lg-1 col-md-1 col-sm-1 col-xs-4" })
                                <div class="col-lg-2 col-md-2 col-sm-2 col-xs-4">
                                    @Html.EditorFor(model => model.modifier, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <label class="control-label col-lg-1 col-md-1 col-sm-1 col-xs-4  ">PCMS Code</label>
                                <div class="col-lg-2 col-md-2 col-sm-2 col-xs-4">
                                    @Html.EditorFor(model => model.pcmsid, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <label class="control-label col-lg-1 col-md-1 col-sm-1 col-xs-4  ">변경일자</label>
                                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-4">
                                    <div class="input-group input-daterange">
                                        <span class="input-group-addon">from</span>
                                        @Html.EditorFor(model => model.chngbegindt, new { htmlAttributes = new { @class = "form-control" } })
                                        <span class="input-group-addon">to</span>
                                        @Html.EditorFor(model => model.chngenddt, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br>
                        <div class="form-group">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-right">
                                <a href="javascript:searching()" class="btn btn-sm btn-primary">검색</a>
                                <a href="javascript:init()" class="btn btn-sm btn-default">초기화</a>
                                <a href="javascript:xlsDownload()" class="btn btn-sm btn-success">엑셀 다운로드</a>
                            </div>
                        </div>
                    </div>
                }
                <div class="clearfix"></div>
                <br />
                <table id="privacytable" class="table table-striped table-bordered paginated">
                    <thead>
                        <tr>
                            <th>변경내역</th>
                            <th>변경일자 (KST)</th>
                            <th>수정자</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Logs)
                        {
                            var dtcreate = TimeZoneInfo.ConvertTime(item.createdate, TimeZoneInfo.Utc, TimeZoneInfo.FindSystemTimeZoneById("Korea Standard Time")).ToString();
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.changes)</td>
                                <td>@dtcreate</td>
                                <td>@Html.DisplayFor(modelItem => item.creater)</td>
                                <td>@Html.ActionLink("상세", "Details", "Privacy", new { id = item.privacy.ID }, null)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    function init() {
        $("#modifier").val("");
        $("#chngbegindt").val("");
        $("#chngenddt").val("");
        $("#pcmsid").val("");
    }
    function searching() {
        $("form").attr("action", "/PrivacyLogs/Index");
        $("form").submit();
    }
    function xlsDownload() {
        $("form").attr("action", "/PrivacyLogs/XlsDownload");
        $("form").submit();
    }
    function pageTable() {
        var $table = $('table.paginated');

        var curIndex = Number($("#startIndex").val());
        var numPerPage = Number($("#pageSize").val());
        var numRows = Number($("#totalCount").val());
        var maxPages = 10;
        var numPages = Math.ceil(numRows / numPerPage);
        var pagecount = maxPages > numPages ? numPages : maxPages;

        var info = (curIndex + 1) * 1 + '/' + numPages + '( ' + numRows + ')';
        $(".pager").remove();
        var $pager = $('<div class="pager"><div class="total">' + info + '</div></div>');

        var startIndex = Math.floor(curIndex / maxPages) * maxPages;
        var endIndex = startIndex + maxPages > numPages ? numPages : startIndex + maxPages;

        // prev
        if (startIndex > 0) {
            $('<span id="pg-prev" class="page-number"></span>').text("|<<").bind('click', function (e) {
                $("form").attr("action", "/PrivacyLogs/Index");
                $("#startIndex").val(0);
                $("form").submit();
            }).appendTo($pager).addClass('clickable');
        }
        if (startIndex > 0) {
            $('<span id="pg-prev" class="page-number"></span>').text("<<").bind('click', function (e) {
                var nextIndex = startIndex - maxPages > 0 ? startIndex - maxPages : 0;
                $("form").attr("action", "/PrivacyLogs/Index");
                $("#startIndex").val(nextIndex);
                $("form").submit();
            }).appendTo($pager).addClass('clickable');
        }

        for (var page = startIndex; page < endIndex ; page++) {
            $('<span id="pg' + page + '" class="page-number"></span>').text(page + 1).bind('click', {
                newPage: page
            }, function (event) {
                var currentPage = event.data['newPage'];
                $("form").attr("action", "/PrivacyLogs/Index");
                $("#startIndex").val(currentPage);
                $("form").submit();
            }).appendTo($pager).addClass('clickable');
        }

        // next
        if (endIndex < numPages) {
            $('<span id="pg-next" class="page-number"></span>').text(">>").bind('click', function (e) {
                var nextIndex = Math.floor((curIndex + maxPages) / maxPages) * maxPages;
                $("form").attr("action", "/PrivacyLogs/Index");
                $("#startIndex").val(nextIndex);
                $("form").submit();
            }).appendTo($pager).addClass('clickable');
        }
        if (endIndex < numPages) {
            $('<span id="pg-next" class="page-number"></span>').text(">>|").bind('click', function (e) {
                $("form").attr("action", "/PrivacyLogs/Index");
                $("#startIndex").val(numPages - 1);
                $("form").submit();
            }).appendTo($pager).addClass('clickable');
        }

        $pager.insertAfter($table).find('#pg' + curIndex).addClass('active');
    }

    $(document).ready(function () {
        $('.input-daterange input').each(function () {
            $(this).datepicker({ autoclose: true, language: "ko", format: "yyyy-mm-dd" });
        });
        pageTable();
    });
</script>