@model PrivacyConsentDB.Models.Channel

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>채널 설정 <small></small></h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">


                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" , @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.athour, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.athour, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.athour, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.usage, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.usage, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.usage, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.path, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.path, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.path, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.exportpath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.exportpath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.exportpath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.backuppath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.backuppath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.backuppath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <br/>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10 text-right">
                                <input type="submit" value="저장" class="btn btn-info btn-sm" />
                                @Html.ActionLink("취소", "Index", null , new { @class = "btn btn-default btn-sm" })
                            </div>

                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>
